Use any database you want to store data.
Implement the following structures and constructors for them (please don’t use ORM):
    Client should have at least ID, Name, Email and Phone;
    Account should have at least ID and Balance;
    Transaction. Add any fields you are think will be necessary;
    Add any reasonable data validators, types, etc.
Add behavior to appropriate structure:
    Charge any amount of money from an account;
    Transfer money from one account to another.
Log all transactions and errors to the console.
Try to use everything you have learn so far.


Banco de España хочет обновить свой интернет-банкинг с использованием последних технологий. На прошлой неделе вы уже начали писать структуры и взаимодействие с БД. Теперь давайте сделаем следующий шаг и напишем микросервис для работы с клиентом и лицевыми счетами. На ваше усмотрение используйте REST или gRPC.
Так как мы еще не проходили с вами тестирование в go, то покрыть ваш сервер тестами можете после нашего занятия в следующую пятницу.
Для лучшего понимания языка и его возможностей старайтесь избегать open source библиотек и не бойтесь изобретать собственные "велосипеды". Так же постарайтесь использовать все, о чем мы с вами говорили на наших занятиях.
Что необходимо сделать?
    Используйте REST или gRPC для вашего микросервиса.
    Для обмена данными с сервером используйте только JSON.
    Простой консольный клиент для общения с сервером, через который можно выполнять запросы к API.
    API для CRUD операций с клиентскими данными.
    API для работы с лицевым счетом:
        Добавление и закрытие лицевого счета клиента. У клиента может быть неограниченное количество счетов.
        Получения текущего баланса.
        Получения списка транзакций за выбранный период.
        Пополнение и списание денежных средств со счета.
        Перевод денег на любой другой счет.
        Отмену денежных транзакций.
        Логирование всех денежных транзакций в БД, включая отмену. 
    Фейковый шлюз для отправки SMS и Email уведомлений об изменении баланса.
        Вместо реальной отправки сделайте вывод в консоли в виде SMS: some text или EMAIL: some text
        Рассылка уведомлений должна быть в зависимости от того, указан ли у клиента SMS и/или Email. 
    Verbose режим для сервера, при котором вы можете наблюдать любые запросы к серверу, включая операции с клиентскими данными.

Материал для более глубоко изучения:
http://divan.github.io/posts/go_concurrency_visualize/
